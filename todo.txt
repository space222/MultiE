Framework Todo List
----------------------
1. settings menu option for player 1 to use keyboard or controller
	and transparently support using key pairs as a joystick axis
2. Generally continue improving main ui.
3. Windows support
4. Stereo sound
5. Support letter/pillar boxing rather than scaling the boxed size to 640x480.




Virtual Boy Todo List
------------------------
1. CPU Bitstring instructions
2. Sound: envelopes, noise channel, channel 5 sweep/modulation
3. World layers that use more than one background
4. Red Alarm crashes the emulator. Will need to gdb it up.
5. Software controller clocking ((almost?) everything uses the hw controller read function)
Questions: 
Do FRAMESTART/LFBEND/RFBEND irqs correspond to 0ms/FCLK-hi,8ms/left finish,18ms/right finish?
Are only 1 of DPBSY active at a time and only between (3, 8) and (13, 18) ms?
Why is FCLK only high for left frame?
If XPEN is clear (drawing disabled), does double buffering not happen? Which frame gets used, whichever was
current when drawing was disabled?
Notes:
1 cpu cycle = 0.05 microseconds
Mario Tennis match setup screen differs between "some" and "all" garbage between runs.
See the source code for the current key mapping. SDLJoystick not yet supported for Virtual Boy.



A2600 Todo List
------------------
1. The other player sprite sizes/copies
2. bankswitching?
3. Cart RAM detection?
4. Audio?



A5200 Todo List
------------------
1. Check what Berzerk is doing to render player and weapon fire and support that.
2. Figure out what button fires player weapon
3. Figure out how to emulate joystick position
4. Find/try more games? Support the similar computers?



C64 Todo List
----------------
1. Support cart ROM in order to run actual software
2. Find software that uses basic bitmap mode to test support for graphical modes
3. Likely give up unless can either:
	a) figure why kernal detects the program name on the tape, but nothing gets past that point
	b) understand at all the floppy clock/data mess



NES Todo List
----------------
1. redo envelope and sweep, see if things get better
2. Implement true per-dot rendering.
3. More mappers? DMC/Frame IRQs?
4. Implement PAL PPU and figure out why input doesn't work in Disk System games.
Notes: Zelda doesn't care, but Metroid depends on MMC1 shift register reset doing reg0|=0xc, otherwise unimpl. opc = $44 at PC=$C02E



GB Todo List
---------------
1. square sweep, noise is less wrong than it was, but...
2. gbc double speed mode
3. add setting for user to customize original gameboy palette.
Status: new gb implementation that doesn't reuse my old ROMBro code, now including color
	and some sound. Many playable games, including save support.
	pokemon yellow has a messed up intro. 
	if hblank is too short the intro freezes for a few seconds, but that doesn't fix the first two screens
	


Intellivision Todo List
--------------------------
1. sprites
2. figure out why everything dies after the first screen



IBM PC Todo List
-------------------
1. Implement pic handling so IRQs can theoretically be at a non-8 base.
2. Implement proper floppy class, as well as a DMA controller.
3. Keyboard and it's IRQ, once loading the first sector of a floppy works can test kb with boot sector games.



Sony PS1 Todo List
---------------------
1. Integrate CD library to isolate remaining failures.
2. Analog controllers, mouse
3. Support more of the timer modes. better timing?
4. SPU envelope and interpolation
5. MDEC Rewrite?
6. Better gpu?
Status: Playable (as in they get to gameplay where a character can move): 
		Mortal Kombat 2, Crash1&2, Ridge Racer (+Revolution via Caetla), CyberSled, Battle Arena Toshinden,
		Spyro 1, Resident Evil 2, Metal Gear Solid, Final Fantasy 8, Duke Nukem: Time to Kill, THPS2&3
	Puzzle Bobble 2 and Spyro 3 freeze eventually
	FF7 ends up in loop past title screen
	Croc only works loaded via EXE by Caetla, and only gets in game, past garbage title screen sometimes, but is playable when it works
	Ridge Racer Type 4, wants a better Getloc CD response(?) while trying to MDEC it up.
	Gran Turismo if it gets there at all reboots(?) into intro movie shortly after race-start loading screen
	Twisted Metal 2, hits undef opcode, boot failure
	Gran Turismo 2, managed to play it once, graphics messed up half way through, no longer works
	NBA Hangtime, hits assertion "Line 636" after a few messed up screens of selecting garbled menu options
Notes:	Somehow never noticed that games do 16bit writes to the high portion of DICR ($10F6). Handling this makes THPS2&3 playable.
	CD is still awful and audio (both DA&XA) is not supported.
	Bunch of games only work if loaded by Caetla (whether via "Game start" or EXE select).
	Currently sending out spurious SPU IRQs every vblank to satisfy MGS and Legend of Legaia
	MDEC needs some work/rewrite.



Sega SMS Todo List
---------------------
1. Line interrupt
2. Wrong tiles in 3dcity.sms (just sometimes? UB or forgot to initialize something?)
3. cart ram + support other vram nt layouts
Status: Bad Apple still has some garbage tiles. 
	Possibly bad tiles elsewhere, UB or (more likely) missed an initialization somewhere.
	Most things (that I've tried) are playable.



Genesis Todo List
--------------------
1. vdp line count interrupt
2. shadow/highlight
Status: YM2612 uses the Nuken OPN library... Poorly? Fantastic Dizzy and UMK3 lack sound.
	Only a few games with graphical bugs left, not including lack of shadow/highlight.
	Did the SH2 for the 32X, but nowhere near working yet.



GBA Todo List
----------------
1. timers and timer scheduling
2. sound
3. save hardware
4. Run the single step tests against the current cpu
5. improve gfx priority and blending



Casio PV-1000 Todo List
--------------------------
1. Throw in some sound
2. Be more precise with the nesdev obscure wiki info
Status: Everything I have shows a title screen, but only Super Cobra is playable.



Microsoft MSX1 Todo List
---------------------------
1. AY-3-8910 noise and envelope.
2. TMS9918A implement multi-color mode and find carts that use the different sprite/zoom settings
3. Joystick fire buttons. Easy to implement, just haven't bothered looking for carts that use them.
Status: BASIC is usable and Pac-Mac is playable with some sound.
Sometimes repeated printing writes to the screen more than once. This can be seen by doing a 10 print .. 20 goto 10
Use F10 to paste the clipboard into BASIC, F11 sets the cassette into read mode, F12 into write mode.
Going into write mode will clear the current tape data. Writing always starts fresh.
"out.tap" is read upon creating a new MSX console instance, and written out upon destruction.



Fairchild Channel F Todo List
--------------------------------
1. Controller input
2. Better video. Figure out how the palette works.
3. Sound
Status: Things boot and display text and take console-front-button-input.



Bandai WonderSwan Todo List
------------------------------
1. The 80286 is currently, mostly a 8088/6 with a few 186 instructions. Need to go through and actually implement
at least the 186 instructions for the WS boot rom to function (currently dies at $fe187 as $C0 is a different instruction
on the later cpu).



V.Tech CreatiVision Todo List
--------------------------------
1. Figure out how creativision likes its vblank interrupts
2. Input
3. The psg possibly need its divider made customizable?
4. TMS9918(a) sprites likely need work.
Status: The one game I have runs until the 3 lives are used up as I don't have input yet.



Apple IIe Todo List
----------------------
1. Trying to load a new Apple 2 instance while running one results in segfault. That really shouldn't happen.
2. Figure out how the IIe ROM's mapping is different from II+ so that "Computer Inspector" can detect and test AuxRAM.
3. Figure out why active text line is not set to the bottom in hires mode. Code is same as lores, so ???
4. Double Res modes.
5. Better floppy
Status: Oregon Trail and DOS run. Three Mile Island requires the 13-sector slot rom, but still doesn't load.
But as I can do a playthrough of Oregon Trail, I'm thinking of moving this one out of the experimental menu. 



6502coru Todo List
---------------------
1. Run 6502coru through the JSON tests (2A03 if possible, regular 6502 otherwise, maybe implement bcd-mode)
2. Finish the 65C02 instructions that are on all variants and run JSON tests.
3. Deep dive the whole dead cycle thing and fix all the read/writes for all cycles on each processor.
4. Try to find per-cycle operation lists for HuC6280, or just cycle counts otherwise and come up with something
	for both the extra instructions and any extra cycles needed for T-flag stuff.
Status: After switching NES over to the coroutine, it still works.
	Also, wow, the first Todo List for a specific chip rather than system.



Macintosh Plus Todo List
---------------------------
1. Timers
2. Floppy
3. SCC
4. Mouse
5. Keyboard
Notes: The file format for the floppy drive is nearly ident. to WOZ. The floppy head ctrl is easier than the 2E with
actual commands instead of the 4-phase stepper motors. Don't know whether my 68k's timing is good enough, but that
would be the only thing I know of right now that would prevent this from working.
May need better docs on the timers. Other than likely being one-shot, I have near zero info.
SCC has datasheets as a standard part. Not much info for mouse/keyboard.
Status: Boots and displays mouse cursor + floppy question mark.



Neo-Geo AES Todo List
------------------------
1. Load c-rom(s) 
2. Start sprites
3. Figure out the .neo format (looks like a straight concat of the various files. p1 starts at the 0x1000 mark)
4. Actually run the z80?
Status:
	Fix layer done, minus support for system ROM graphics or any bankswitching.
	Gets through the system rom bootup by lame hack of RTC function: Once the first 
command gets strobed in, begin alternating the output pin every 30 frames.



Nintendo 64 Todo List
------------------------
Overall:
1. Find FPU bug.
2. Controller Paks.
3. Rest of RSP instructions.
4. RDP 32bit texture RG/BA bank split and maybe YUV
5. Accurate PI DMA? JIT? Better TLB?
Subsystems:
1. VR4300: better TLB. find the spurious fpu exception and reenable them.
2. VI: currently just all registers being r/w so I can display output. Actually do things per-line and v-int.
3. PIF: The rest of the buttons, and support controllers. Still need the framework support for input customization.
	Proper EEPROM and Controller paks.
4. RI: RI_SELECT returns 0x14 to help skip other setup in IPL, but should make all regs r/w.
5. SP: Rewrite DMA. Rewrite SP_STATUS handling. Continue vector load/store ops.
6. DP: Texture wordswapping imperfect. Improve texture sampling. Coverage. Blending alpha compare. Multitude of other things.
Status:
SP: a few load/stores left. Like all the rest of the DMAs (except AI), DMA is instant.
DP: still some triangle gaps and bad spans. wrong texture coords. z buffer is linear 16bit with no deltaz or 18bit fp.
	YUV textures. RG/BA bank split.
MI: done except for MI_MODE's repeat and ebus features
PI: basic aligned cart->RAM implemented along with interrupt.
SI: done, but DMAs instant. Not supporting the single-word xfer regs.
AI: Audio works. Not supporting the delayed carry hardware bug. Sounding any good dependent on host running fast enough.
PIF: Paks still. one controller and only arrow keys as stick + a/b/z/start currently implemented and working.
Notes (latest first):
	Resident Evil 2 appears sensitive to number of instructions per line. Fails with "No Controller". 5k fails, 6k succeeds.
	New idle loop detection didn't work out, but reworked run_frame better
	in triangle rasterization y2 being part of the xm loop instead of xl fixes most of the gaps and popping lines
	Turned out almost everything freezing was spurious fpu exceptions. Commenting out fpu exceptions "fixes" everything.
		At least I know where to look for the real bug.
	Implementing RDP scissor fixed the logo and FIGHT text in MKT, as well as the address error in that and Smash.
	Everything that doesn't use TLB does *something*, even if that something is a hang at the first output.
		Almost everything hangs eventually, even sm64 has random freezing just less than most.
	I've done something to break Flappy Bird's pipes. Everything about texcoord handling is trial and error now.
	Triangle attributes S and T are actually s10.21, not s15.16. Their deltas (eg DsDx) already take this into account
	Load Block having num_bytes be num_texels*8 instead of an actual bpp calc makes mario, starfox, and LCARS look way better.
		This is probably papering over a different bug? 
		Found a different based-on-bpp expression in MAME that also fixed Superman and Wave Race.
	After c/p'ing pif hle code from dillonb/n64 to see how far off I was, there was no change until I
		zero'd out the response to EEPROM/Pak commands and now a bunch of games boot 
		(apparently this wasn't what made them boot, so now I don't even know what I did right nevermind wrong)
	After implementing LWC1/MTC1 and friends half mode odd registers, Namco's title screen and menu button music/sounds function.
		Looks like odd register access isn't undefined in half mode; it's for getting data into upper parts of a double.
	If RI_SELECT is nonzero to skip rdram init, IPL3 never writes RAM size to $80000318 which makes libdragon 
		crash trying to set up the stack at end of RAM.
	Flappy Bird's pipes use texcoords masks. It doesn't depend on Tile Size. I'm still unclear on how Tile Size and
		all the shift/clamp/mask and what order those happen.



Atari Lynx Todo List
-----------------------
1. Sprite blitter engine
2. Timers
3. Input? Sound? etc?



Watara SuperVision Todo List
-------------------------------
1. Find more info about it
2. Controller input to see if the one game that animates its title screen works
3. Fix the timer irq
4. Audio



Nintendo GameCube Todo List
------------------------------
1. Go all-out with bitfields on the regs. Various status, ctrl, and write-1-to-clear-irq bits are all mixed in same reg.
2. Figure which dsp mailboxes are to/from cpu. DSP manual uses dest naming, YAGCD uses src naming?
3. Start implementing some DSP instructions, try to get BS2 past DSP init.
4. Write tests, and try to start my own porplib (I'm not using devkitppc or libogc)
Status: panda.dol works. no idea whether cpu instructions or irqs or etc is wrong at this point, time for tests.
	Fruit Remover looks like it sets up VI irqs and enables interrupts, but really doesn't like recv'in them.
	Everything else looks like it uses the same library that inits DSP in an identical manner to the BS2 firmware.


